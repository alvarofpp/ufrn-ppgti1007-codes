/**
 * generated by Xtext 2.25.0
 */
package org.ppgti.mydsl.generator;

import com.google.common.collect.Iterators;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.ppgti.mydsl.myDSL.Pessoa;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDSLGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("class Main {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void main (String[] args) {");
    _builder.newLine();
    final String pre = _builder.toString();
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    final String pos = _builder_1.toString();
    final Function1<Pessoa, CharSequence> _function = (Pessoa it) -> {
      return this.compile(it);
    };
    String _join = IteratorExtensions.join(IteratorExtensions.<Pessoa, CharSequence>map(Iterators.<Pessoa>filter(resource.getAllContents(), Pessoa.class), _function), "\n");
    String _plus = (pre + _join);
    String _plus_1 = (_plus + "\n");
    String _plus_2 = (_plus_1 + pos);
    fsa.generateFile("Main.java", _plus_2);
  }
  
  private CharSequence compile(final Pessoa p) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("System.out.println(\"Pessoa: ");
    String _nome = p.getNome();
    _builder.append(_nome);
    _builder.append(" ");
    String _sobrenome = p.getSobrenome();
    _builder.append(_sobrenome);
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
}
